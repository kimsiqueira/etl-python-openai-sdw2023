# -*- coding: utf-8 -*-
"""ETL com Python - SDW2023.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wrrzfEDdWW3zs9w-i0hq0yySykdod9XS
"""

sdw2023_api_url = 'https://sdw-2023-prd.up.railway.app'

"""# **Extract**"""

# Extrair IDs do arquivo CSV

import pandas as pd

df = pd.read_csv('sdw2023.csv')
user_ids = df['UserID'].tolist()
print(user_ids)

# Obter dados dos IDs usando a API SDW 2023

import requests
import json

def get_user(id):
  response = requests.get(f'{sdw2023_api_url}/users/{id}')
  return response.json() if response.status_code == 200 else None

users = [user for id in user_ids if (user := get_user(id)) is not None]
print(json.dumps(users, indent=2))

"""# **Transform**"""

# Instalando biblioteca da OpenAI

!pip install openai

#API Key

openai_api_key = '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'

#Integração com o ChatGPT

import openai

openai.api_key = openai_api_key

def generate_ai_news(user):
    completion = openai.ChatCompletion.create(
      model="gpt-3.5-turbo",
      messages=[
        {
            "role": "system",
            "content": "Você é um especialista em marketing bancário."
        },
        {
            "role": "user",
            "content": f"Crie uma mensagem para {user['name']} sobre a importância dos investimentos (máximo de 100 caracteres)"
        }
      ]
    )
    return completion.choices[0].message.content.strip('\"')

for user in users:
  news = generate_ai_news(user)
  print(news)
  user['news'].append({
      "icon": "https://digitalinnovationone.github.io/santander-dev-week-2023-api/icons/credit.svg",
      "description": news
  })

"""# **Load**"""

# Update "news" dos usuários

def update_user(user):
  response = requests.put(f"{sdw2023_api_url}/users/{user['id']}", json=user)
  return True if response.status_code == 200 else False

for user in users:
  success = update_user(user)
  print(f"User {user['name']} updated? {success}!")